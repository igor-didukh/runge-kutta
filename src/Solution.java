
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Window;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 * Filter of user input in text filds
 */
class MyDocumentFilter extends DocumentFilter {
    private final String bannedSymbols = "[^0123456789.Ee-]";
    
    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
        string = string.replaceAll(bannedSymbols, "");
        super.insertString(fb, offset, string, attr);
    }

    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
        text = text.replaceAll(bannedSymbols, "");
        super.replace(fb, offset, length, text, attrs);
    }
}

/** 
 * For save argument and function values for one step of calculation
 */
class Result {
    double t, uRK4, vRK4, uRAL, vRAL;
    
    Result(double t, double uRK4, double vRK4, double uRAL, double vRAL) {
        this.t = t; 
        this.uRK4 = uRK4;
        this.vRK4 = vRK4;
        this.uRAL = uRAL;
        this.vRAL = vRAL;
    }
}

/**
 * Main form
 */
class Solution extends javax.swing.JFrame {
    private ODESystem[] systems;                    // Array of all source systems
    private Function[] functions;                   // Array of reference functions
    static double t0, t1;                           // Bounds for argument (left - fixed, right - changeable)

    public Solution() {
        initComponents();
    }
    
    /**
    * Show frame on the center of screen 
    */
    public static void showFrame(Window frame) {
        int screenWidth = 0, screenHeight = 0;

        GraphicsDevice[] screenDevices = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();
        for (GraphicsDevice graphicsDevice : screenDevices) {
            screenWidth = graphicsDevice.getDefaultConfiguration().getBounds().width;
            screenHeight = graphicsDevice.getDefaultConfiguration().getBounds().height;
        }

        Rectangle r = frame.getBounds();

        int frameWidth = r.width, frameHeight = r.height;
        int posX = (screenWidth - frameWidth) / 2;
        int posY = (screenHeight - frameHeight) / 2 - 20;

        frame.setPreferredSize(new Dimension(frameWidth, frameHeight));
        frame.setBounds(posX, posY, r.width, r.height);
        frame.setVisible(true);
   }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panelTitle = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        labelSubtitle = new javax.swing.JLabel();
        panelSource = new javax.swing.JPanel();
        labelSystem = new javax.swing.JLabel();
        comboSystem = new javax.swing.JComboBox<>();
        btnParameters = new javax.swing.JButton();
        labelPoints = new javax.swing.JLabel();
        editPoints = new javax.swing.JTextField();
        sliderPoints = new javax.swing.JSlider();
        labelLBound = new javax.swing.JLabel();
        editLBound = new javax.swing.JTextField();
        labelRBound = new javax.swing.JLabel();
        editRBound = new javax.swing.JTextField();
        btnSolve = new javax.swing.JButton();
        panelReference = new javax.swing.JPanel();
        labelRefFunction = new javax.swing.JLabel();
        comboRefFunction = new javax.swing.JComboBox<>();
        lbl_a = new javax.swing.JLabel();
        edit_a = new javax.swing.JTextField();
        lbl_b = new javax.swing.JLabel();
        edit_b = new javax.swing.JTextField();
        lbl_c = new javax.swing.JLabel();
        edit_c = new javax.swing.JTextField();
        editRefFunction = new javax.swing.JTextField();
        panelResult = new javax.swing.JPanel();
        scrollInfo = new javax.swing.JScrollPane();
        textInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solve the ODE system by Rounge-Kutta methods");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        labelTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(0, 0, 204));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Runge-Kutta methods for ordinary differential equations systems");

        labelSubtitle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelSubtitle.setForeground(new java.awt.Color(102, 0, 0));
        labelSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSubtitle.setText("classical 4th order Runge-Kutta method (RK4) & Ralston's method");

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addComponent(labelSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(245, 245, 245))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addComponent(labelTitle)
                .addGap(6, 6, 6)
                .addComponent(labelSubtitle))
        );

        panelSource.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Conditions: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 153))); // NOI18N

        labelSystem.setText("Source system:");

        comboSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSystemActionPerformed(evt);
            }
        });

        btnParameters.setText("Parameters...");
        btnParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParametersActionPerformed(evt);
            }
        });

        labelPoints.setText("Points:");

        editPoints.setEditable(false);
        editPoints.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sliderPoints, org.jdesktop.beansbinding.ELProperty.create("${value}"), editPoints, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sliderPoints.setMajorTickSpacing(5);
        sliderPoints.setMinimum(10);
        sliderPoints.setPaintLabels(true);
        sliderPoints.setPaintTicks(true);
        sliderPoints.setSnapToTicks(true);

        labelLBound.setText("Interval from:");

        editLBound.setEditable(false);
        editLBound.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        editLBound.setText("0");

        labelRBound.setText("to:");

        editRBound.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        editRBound.setText("20");
        editRBound.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                editRBoundFocusLost(evt);
            }
        });
        editRBound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRBoundActionPerformed(evt);
            }
        });

        btnSolve.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSolve.setText("Solve");
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSourceLayout = new javax.swing.GroupLayout(panelSource);
        panelSource.setLayout(panelSourceLayout);
        panelSourceLayout.setHorizontalGroup(
            panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSourceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSystem)
                    .addComponent(labelLBound)
                    .addGroup(panelSourceLayout.createSequentialGroup()
                        .addComponent(labelPoints)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSourceLayout.createSequentialGroup()
                        .addComponent(editLBound, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelRBound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editRBound, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSolve, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSourceLayout.createSequentialGroup()
                        .addComponent(comboSystem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnParameters))
                    .addComponent(sliderPoints, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelSourceLayout.setVerticalGroup(
            panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSourceLayout.createSequentialGroup()
                .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSystem)
                    .addComponent(btnParameters))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelPoints)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSourceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelLBound, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editLBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelRBound)
                        .addComponent(editRBound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSolve)))
        );

        panelReference.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Reference function: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 153))); // NOI18N

        labelRefFunction.setText("Type:");

        comboRefFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRefFunctionActionPerformed(evt);
            }
        });

        lbl_a.setText("a:");

        edit_a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        edit_a.setText("1");
        edit_a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edit_aFocusLost(evt);
            }
        });
        edit_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_aActionPerformed(evt);
            }
        });

        lbl_b.setText("b:");

        edit_b.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        edit_b.setText("1");
        edit_b.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edit_bFocusLost(evt);
            }
        });
        edit_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_bActionPerformed(evt);
            }
        });

        lbl_c.setText("c:");

        edit_c.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        edit_c.setText("1");
        edit_c.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edit_cFocusLost(evt);
            }
        });
        edit_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_cActionPerformed(evt);
            }
        });

        editRefFunction.setEditable(false);
        editRefFunction.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout panelReferenceLayout = new javax.swing.GroupLayout(panelReference);
        panelReference.setLayout(panelReferenceLayout);
        panelReferenceLayout.setHorizontalGroup(
            panelReferenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReferenceLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelRefFunction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboRefFunction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(lbl_a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit_a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit_b, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_c)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit_c, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(editRefFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelReferenceLayout.setVerticalGroup(
            panelReferenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReferenceLayout.createSequentialGroup()
                .addGroup(panelReferenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRefFunction)
                    .addComponent(comboRefFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_a)
                    .addComponent(edit_a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_b)
                    .addComponent(edit_b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_c)
                    .addComponent(edit_c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editRefFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelResult.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Results: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 153))); // NOI18N

        textInfo.setColumns(20);
        textInfo.setRows(5);
        scrollInfo.setViewportView(textInfo);

        javax.swing.GroupLayout panelResultLayout = new javax.swing.GroupLayout(panelResult);
        panelResult.setLayout(panelResultLayout);
        panelResultLayout.setHorizontalGroup(
            panelResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollInfo)
                .addContainerGap())
        );
        panelResultLayout.setVerticalGroup(
            panelResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 672, Short.MAX_VALUE)
            .addComponent(panelReference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Get value of reference function parameter
     */
    private double getRefParam(JTextField edit_param) {
        double p = 1;
        try {
            p = Double.parseDouble(edit_param.getText());
        } catch (NumberFormatException e) {
            edit_param.setText("1");
        }
        return p;
    }
    
    /**
     * Create reference function name
     */
    private void makeRefFunctionName() {
        Function ref = functions[ comboRefFunction.getSelectedIndex() ];
        double a = getRefParam(edit_a);
        double b = getRefParam(edit_b);
        double c = getRefParam(edit_c);
        
        String sa = "0", sb = "", sc = "", sign = "", sf, s;
        
        s = "ref(x) = ";
        
        if (a == 0) {
            if (c == 0)
                s += "0";
            else
                s += "" + c;
        } else {
            if (Math.abs(a) == 1) 
                sa = (a<0) ? "-" : "";
            else
                sa = "" + a;
            
            if (b == 0)
                sb = "0";
            else {
                if (Math.abs(b) == 1) 
                    sb = (b<0) ? "-" : "";
                else
                    sb = "" + b;
                sb += "x";
            }
            
            if (c != 0) {
                sign = (c<1) ? " - " : " + ";
                sc = "" + Math.abs(c);
            }
            
            sf = String.format("%s %s(%s)", sa, ref.getLetter(), sb);
            s += sf + sign + sc;
        }
        
        editRefFunction.setText(s);
    }
    
    /**
     * Create reference function using type and parameters
     */
    private Function createRefFunction() {
        Function ref = functions[ comboRefFunction.getSelectedIndex() ];
        String t = systems[comboSystem.getSelectedIndex()].getArg().getLetter();
        double a = getRefParam(edit_a);
        double b = getRefParam(edit_b);
        double c = getRefParam(edit_c);
        
        return new Function() {
            @Override
            public String getName() {
                return editRefFunction.getText().replace("x", t);
            }

            @Override
            public String getLetter() {
                return "";
            }

            @Override
            public double getInitValue() {
                return 0;
            }

            @Override
            public double f(double x) {
                return a * ref.f(b*x) + c;
            }
        };
    }
    
    /**
     * Solve ODE system
     */
    private void solveSystem() {                                
        int n = sliderPoints.getValue();
        Result[] res = new Result[n+1];
        
        ODESystem system = systems[ comboSystem.getSelectedIndex() ];
        
        double uRK4 = system.get_f1().getInitValue(), 
               vRK4 = system.get_f2().getInitValue(),
               uRAL = uRK4,
               vRAL = vRK4;
        
        ButcherTableauRK4 btRK4 = new ButcherTableauRK4();
        ButcherTableauRalston btRAL = new ButcherTableauRalston();
        
        t1 = Double.parseDouble(editRBound.getText());
        double h = (t1 - t0) / (n);
        
        res[0] = new Result(t0, uRK4, vRK4, uRAL, vRAL);
        
        double t;
        
        double[] aRK4 = btRK4.a(), gRK4 = btRK4.g(); double[][] bRK4 = btRK4.b();
        double[] aRAL = btRAL.a(), gRAL = btRAL.g(); double[][] bRAL = btRAL.b();

        double[] kuRK4 = new double[5], kvRK4 = new double[5];
        double[] kuRAL = new double[5], kvRAL = new double[5];
        
        for (int i = 1; i <= n; i++) {
            t = t0 + i * h;

            double usgRK4 = 0, vsgRK4 = 0;
            double usgRAL = 0, vsgRAL = 0;
            
            for (int j = 1; j <= 4; j++) {
                double tjRK4 = t + aRK4[j] * h, ujRK4, vjRK4, suRK4 = 0, svRK4 = 0;
                double tjRAL = t + aRAL[j] * h, ujRAL, vjRAL, suRAL = 0, svRAL = 0;
            
                for (int k = 1; k <= j-1; k++) {
                    suRK4 += bRK4[j][k] * kuRK4[k]; svRK4 += bRK4[j][k] * kvRK4[k];
                    suRAL += bRAL[j][k] * kuRAL[k]; svRAL += bRAL[j][k] * kvRAL[k];
                }
                
                ujRK4 = uRK4 + h * suRK4; vjRK4 = vRK4 + h * svRK4;
                ujRAL = uRAL + h * suRAL; vjRAL = vRAL + h * svRAL;
                
                kuRK4[j] = system.F1(tjRK4, ujRK4, vjRK4); kvRK4[j] = system.F2(tjRK4, ujRK4, vjRK4);
                kuRAL[j] = system.F1(tjRAL, ujRAL, vjRAL); kvRAL[j] = system.F2(tjRAL, ujRAL, vjRAL);
                
                usgRK4 += gRK4[j] * kuRK4[j]; vsgRK4 += gRK4[j] * kvRK4[j];
                usgRAL += gRAL[j] * kuRAL[j]; vsgRAL += gRAL[j] * kvRAL[j];
            }
            
            uRK4 += h * usgRK4; vRK4 += h * vsgRK4;
            uRAL += h * usgRAL; vRAL += h * vsgRAL;

            res[i] = new Result(t, uRK4, vRK4, uRAL, vRAL);
        }
        
        Results.setTitle(system, textInfo);
        
        if ((system.get_f1().getName().length() == 0) | (system.get_f2().getName().length() == 0))      // Analitic solution not set
            Results.printSolution(res);
        else
            Results.printSolutionWithAnalitic(res);
            
        Function ref = createRefFunction();
        Results.drawSolution(res, ref);
    }                               
    
    /**
     * Check text field value
     * if not ok - restore old value
     */
    private void checkRightBound() {
        try {
            double r = Double.parseDouble(editRBound.getText());
            if (r > t0)
                t1 = r;
            else
                editRBound.setText("" + t1);
        } catch (NumberFormatException e) {
            editRBound.setText("" + t1);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        getRootPane().setDefaultButton(btnSolve);
        
        // Fill array of the systems
        final int systemsCount = 5;
        systems = new ODESystem[systemsCount];
        systems[0] = new System1();
        systems[1] = new System2();
        systems[2] = new System3();
        systems[3] = new System4();
        systems[4] = new SystemFromJob();
        
        // Form combo box from the names of the systems
        String[] comboList = new String[systemsCount];
        for (int i = 0; i < systemsCount; i++)
            comboList[i] = systems[i].getName();
        comboSystem.setModel(new DefaultComboBoxModel<>(comboList));
        comboSystem.setSelectedIndex(4);
        // ===
        
        // Fill array of the reference functions
        final int functionsCount = 4;
        functions = new Function[functionsCount];
        functions[0] = new f1();
        functions[1] = new f2();
        functions[2] = new f3();
        functions[3] = new f4();
        
        // Form combo box from the names of the functions
        comboList = new String[functionsCount];
        for (int i = 0; i < functionsCount; i++) 
            comboList[i] = "f(x) = " + functions[i].getName();
        comboRefFunction.setModel(new DefaultComboBoxModel<>(comboList));
        comboRefFunction.setSelectedIndex(0);
        // ===
        
        // Set filter to text field
        ((AbstractDocument) editRBound.getDocument()).setDocumentFilter(new MyDocumentFilter());
        ((AbstractDocument) edit_a.getDocument()).setDocumentFilter(new MyDocumentFilter());
        ((AbstractDocument) edit_b.getDocument()).setDocumentFilter(new MyDocumentFilter());
        ((AbstractDocument) edit_c.getDocument()).setDocumentFilter(new MyDocumentFilter());
        
        comboSystemActionPerformed(null);
        makeRefFunctionName();
    }//GEN-LAST:event_formWindowOpened

    private void comboSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSystemActionPerformed
        ODESystem system = systems[comboSystem.getSelectedIndex()];
        t0 = system.getArg().getInitValue();
        t1 = system.getArg().getBoundValue();
        
        textInfo.setText("");
        editLBound.setText("" + t0);
        editRBound.setText("" + t1);
        
        btnParameters.setVisible(system.getParametersDialog() != null);
    }//GEN-LAST:event_comboSystemActionPerformed

    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        solveSystem();
    }//GEN-LAST:event_btnSolveActionPerformed

    private void editRBoundFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editRBoundFocusLost
        checkRightBound();
    }//GEN-LAST:event_editRBoundFocusLost

    private void editRBoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRBoundActionPerformed
        checkRightBound();
    }//GEN-LAST:event_editRBoundActionPerformed

    private void btnParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParametersActionPerformed
        ODESystem system = systems[comboSystem.getSelectedIndex()];
        Solution.showFrame(system.getParametersDialog());
    }//GEN-LAST:event_btnParametersActionPerformed

    private void comboRefFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRefFunctionActionPerformed
        makeRefFunctionName();
    }//GEN-LAST:event_comboRefFunctionActionPerformed

    private void edit_aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_aActionPerformed
        makeRefFunctionName();
    }//GEN-LAST:event_edit_aActionPerformed

    private void edit_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_bActionPerformed
        makeRefFunctionName();
    }//GEN-LAST:event_edit_bActionPerformed

    private void edit_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_cActionPerformed
        makeRefFunctionName();
    }//GEN-LAST:event_edit_cActionPerformed

    private void edit_aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edit_aFocusLost
        makeRefFunctionName();
    }//GEN-LAST:event_edit_aFocusLost

    private void edit_bFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edit_bFocusLost
        makeRefFunctionName();
    }//GEN-LAST:event_edit_bFocusLost

    private void edit_cFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edit_cFocusLost
        makeRefFunctionName();
    }//GEN-LAST:event_edit_cFocusLost

    // <editor-fold defaultstate="collapsed" desc="Variables declaration">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnParameters;
    private javax.swing.JButton btnSolve;
    private javax.swing.JComboBox<String> comboRefFunction;
    private javax.swing.JComboBox<String> comboSystem;
    private javax.swing.JTextField editLBound;
    private javax.swing.JTextField editPoints;
    private javax.swing.JTextField editRBound;
    private javax.swing.JTextField editRefFunction;
    private javax.swing.JTextField edit_a;
    private javax.swing.JTextField edit_b;
    private javax.swing.JTextField edit_c;
    private javax.swing.JLabel labelLBound;
    private javax.swing.JLabel labelPoints;
    private javax.swing.JLabel labelRBound;
    private javax.swing.JLabel labelRefFunction;
    private javax.swing.JLabel labelSubtitle;
    private javax.swing.JLabel labelSystem;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel lbl_a;
    private javax.swing.JLabel lbl_b;
    private javax.swing.JLabel lbl_c;
    private javax.swing.JPanel panelReference;
    private javax.swing.JPanel panelResult;
    private javax.swing.JPanel panelSource;
    private javax.swing.JPanel panelTitle;
    private javax.swing.JScrollPane scrollInfo;
    private javax.swing.JSlider sliderPoints;
    private javax.swing.JTextArea textInfo;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
